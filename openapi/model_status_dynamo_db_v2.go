/*
REST API

Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StatusDynamoDbV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusDynamoDbV2{}

// StatusDynamoDbV2 struct for StatusDynamoDbV2
type StatusDynamoDbV2 struct {
	InitialDumpCompletionPercentage *float64 `json:"initial_dump_completion_percentage,omitempty"`
	// State of current ingest for this table.
	State *string `json:"state,omitempty"`
	// ISO-8601 date when source was last processed.
	StreamLastProcessedAt *string `json:"stream_last_processed_at,omitempty"`
}

// NewStatusDynamoDbV2 instantiates a new StatusDynamoDbV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusDynamoDbV2() *StatusDynamoDbV2 {
	this := StatusDynamoDbV2{}
	return &this
}

// NewStatusDynamoDbV2WithDefaults instantiates a new StatusDynamoDbV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusDynamoDbV2WithDefaults() *StatusDynamoDbV2 {
	this := StatusDynamoDbV2{}
	return &this
}

// GetInitialDumpCompletionPercentage returns the InitialDumpCompletionPercentage field value if set, zero value otherwise.
func (o *StatusDynamoDbV2) GetInitialDumpCompletionPercentage() float64 {
	if o == nil || IsNil(o.InitialDumpCompletionPercentage) {
		var ret float64
		return ret
	}
	return *o.InitialDumpCompletionPercentage
}

// GetInitialDumpCompletionPercentageOk returns a tuple with the InitialDumpCompletionPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusDynamoDbV2) GetInitialDumpCompletionPercentageOk() (*float64, bool) {
	if o == nil || IsNil(o.InitialDumpCompletionPercentage) {
		return nil, false
	}
	return o.InitialDumpCompletionPercentage, true
}

// HasInitialDumpCompletionPercentage returns a boolean if a field has been set.
func (o *StatusDynamoDbV2) HasInitialDumpCompletionPercentage() bool {
	if o != nil && !IsNil(o.InitialDumpCompletionPercentage) {
		return true
	}

	return false
}

// SetInitialDumpCompletionPercentage gets a reference to the given float64 and assigns it to the InitialDumpCompletionPercentage field.
func (o *StatusDynamoDbV2) SetInitialDumpCompletionPercentage(v float64) {
	o.InitialDumpCompletionPercentage = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *StatusDynamoDbV2) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusDynamoDbV2) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *StatusDynamoDbV2) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *StatusDynamoDbV2) SetState(v string) {
	o.State = &v
}

// GetStreamLastProcessedAt returns the StreamLastProcessedAt field value if set, zero value otherwise.
func (o *StatusDynamoDbV2) GetStreamLastProcessedAt() string {
	if o == nil || IsNil(o.StreamLastProcessedAt) {
		var ret string
		return ret
	}
	return *o.StreamLastProcessedAt
}

// GetStreamLastProcessedAtOk returns a tuple with the StreamLastProcessedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusDynamoDbV2) GetStreamLastProcessedAtOk() (*string, bool) {
	if o == nil || IsNil(o.StreamLastProcessedAt) {
		return nil, false
	}
	return o.StreamLastProcessedAt, true
}

// HasStreamLastProcessedAt returns a boolean if a field has been set.
func (o *StatusDynamoDbV2) HasStreamLastProcessedAt() bool {
	if o != nil && !IsNil(o.StreamLastProcessedAt) {
		return true
	}

	return false
}

// SetStreamLastProcessedAt gets a reference to the given string and assigns it to the StreamLastProcessedAt field.
func (o *StatusDynamoDbV2) SetStreamLastProcessedAt(v string) {
	o.StreamLastProcessedAt = &v
}

func (o StatusDynamoDbV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusDynamoDbV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InitialDumpCompletionPercentage) {
		toSerialize["initial_dump_completion_percentage"] = o.InitialDumpCompletionPercentage
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.StreamLastProcessedAt) {
		toSerialize["stream_last_processed_at"] = o.StreamLastProcessedAt
	}
	return toSerialize, nil
}

type NullableStatusDynamoDbV2 struct {
	value *StatusDynamoDbV2
	isSet bool
}

func (v NullableStatusDynamoDbV2) Get() *StatusDynamoDbV2 {
	return v.value
}

func (v *NullableStatusDynamoDbV2) Set(val *StatusDynamoDbV2) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusDynamoDbV2) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusDynamoDbV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusDynamoDbV2(val *StatusDynamoDbV2) *NullableStatusDynamoDbV2 {
	return &NullableStatusDynamoDbV2{value: val, isSet: true}
}

func (v NullableStatusDynamoDbV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusDynamoDbV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


