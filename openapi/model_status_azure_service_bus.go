/*
REST API

Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StatusAzureServiceBus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusAzureServiceBus{}

// StatusAzureServiceBus struct for StatusAzureServiceBus
type StatusAzureServiceBus struct {
	// Service Bus first message processed time in ISO-8601 format.
	FirstProcessedAt *string `json:"first_processed_at,omitempty"`
	// Number of records processed.
	RecordsProcessed *int64 `json:"records_processed,omitempty"`
	// Sessions processed.
	Sessions *map[string]StatusAzureServiceBusSession `json:"sessions,omitempty"`
}

// NewStatusAzureServiceBus instantiates a new StatusAzureServiceBus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusAzureServiceBus() *StatusAzureServiceBus {
	this := StatusAzureServiceBus{}
	return &this
}

// NewStatusAzureServiceBusWithDefaults instantiates a new StatusAzureServiceBus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusAzureServiceBusWithDefaults() *StatusAzureServiceBus {
	this := StatusAzureServiceBus{}
	return &this
}

// GetFirstProcessedAt returns the FirstProcessedAt field value if set, zero value otherwise.
func (o *StatusAzureServiceBus) GetFirstProcessedAt() string {
	if o == nil || IsNil(o.FirstProcessedAt) {
		var ret string
		return ret
	}
	return *o.FirstProcessedAt
}

// GetFirstProcessedAtOk returns a tuple with the FirstProcessedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusAzureServiceBus) GetFirstProcessedAtOk() (*string, bool) {
	if o == nil || IsNil(o.FirstProcessedAt) {
		return nil, false
	}
	return o.FirstProcessedAt, true
}

// HasFirstProcessedAt returns a boolean if a field has been set.
func (o *StatusAzureServiceBus) HasFirstProcessedAt() bool {
	if o != nil && !IsNil(o.FirstProcessedAt) {
		return true
	}

	return false
}

// SetFirstProcessedAt gets a reference to the given string and assigns it to the FirstProcessedAt field.
func (o *StatusAzureServiceBus) SetFirstProcessedAt(v string) {
	o.FirstProcessedAt = &v
}

// GetRecordsProcessed returns the RecordsProcessed field value if set, zero value otherwise.
func (o *StatusAzureServiceBus) GetRecordsProcessed() int64 {
	if o == nil || IsNil(o.RecordsProcessed) {
		var ret int64
		return ret
	}
	return *o.RecordsProcessed
}

// GetRecordsProcessedOk returns a tuple with the RecordsProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusAzureServiceBus) GetRecordsProcessedOk() (*int64, bool) {
	if o == nil || IsNil(o.RecordsProcessed) {
		return nil, false
	}
	return o.RecordsProcessed, true
}

// HasRecordsProcessed returns a boolean if a field has been set.
func (o *StatusAzureServiceBus) HasRecordsProcessed() bool {
	if o != nil && !IsNil(o.RecordsProcessed) {
		return true
	}

	return false
}

// SetRecordsProcessed gets a reference to the given int64 and assigns it to the RecordsProcessed field.
func (o *StatusAzureServiceBus) SetRecordsProcessed(v int64) {
	o.RecordsProcessed = &v
}

// GetSessions returns the Sessions field value if set, zero value otherwise.
func (o *StatusAzureServiceBus) GetSessions() map[string]StatusAzureServiceBusSession {
	if o == nil || IsNil(o.Sessions) {
		var ret map[string]StatusAzureServiceBusSession
		return ret
	}
	return *o.Sessions
}

// GetSessionsOk returns a tuple with the Sessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusAzureServiceBus) GetSessionsOk() (*map[string]StatusAzureServiceBusSession, bool) {
	if o == nil || IsNil(o.Sessions) {
		return nil, false
	}
	return o.Sessions, true
}

// HasSessions returns a boolean if a field has been set.
func (o *StatusAzureServiceBus) HasSessions() bool {
	if o != nil && !IsNil(o.Sessions) {
		return true
	}

	return false
}

// SetSessions gets a reference to the given map[string]StatusAzureServiceBusSession and assigns it to the Sessions field.
func (o *StatusAzureServiceBus) SetSessions(v map[string]StatusAzureServiceBusSession) {
	o.Sessions = &v
}

func (o StatusAzureServiceBus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusAzureServiceBus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FirstProcessedAt) {
		toSerialize["first_processed_at"] = o.FirstProcessedAt
	}
	if !IsNil(o.RecordsProcessed) {
		toSerialize["records_processed"] = o.RecordsProcessed
	}
	if !IsNil(o.Sessions) {
		toSerialize["sessions"] = o.Sessions
	}
	return toSerialize, nil
}

type NullableStatusAzureServiceBus struct {
	value *StatusAzureServiceBus
	isSet bool
}

func (v NullableStatusAzureServiceBus) Get() *StatusAzureServiceBus {
	return v.value
}

func (v *NullableStatusAzureServiceBus) Set(val *StatusAzureServiceBus) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusAzureServiceBus) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusAzureServiceBus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusAzureServiceBus(val *StatusAzureServiceBus) *NullableStatusAzureServiceBus {
	return &NullableStatusAzureServiceBus{value: val, isSet: true}
}

func (v NullableStatusAzureServiceBus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusAzureServiceBus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


