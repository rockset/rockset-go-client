/*
REST API

Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateScheduledLambdaRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateScheduledLambdaRequest{}

// CreateScheduledLambdaRequest struct for CreateScheduledLambdaRequest
type CreateScheduledLambdaRequest struct {
	// The apikey to use when triggering execution of the associated query lambda.
	Apikey *string `json:"apikey,omitempty"`
	// The UNIX-formatted cron string for this scheduled query lambda.
	CronString string `json:"cron_string"`
	// The name of the QL to use for scheduled execution.
	QlName string `json:"ql_name"`
	// The QL tag to use for scheduled execution.
	Tag *string `json:"tag,omitempty"`
	// The number of times to execute this scheduled query lambda. Once this scheduled query lambda has been executed this many times, it will no longer be executed.
	TotalTimesToExecute *int64 `json:"total_times_to_execute,omitempty"`
	// The version of the QL to use for scheduled execution.
	Version *string `json:"version,omitempty"`
	// The value to use as the authorization header when hitting the webhook.
	WebhookAuthHeader *string `json:"webhook_auth_header,omitempty"`
	// The payload that should be sent to the webhook. JSON format.
	WebhookPayload *string `json:"webhook_payload,omitempty"`
	// The URL of the webhook that should be triggered after this scheduled query lambda completes.
	WebhookUrl *string `json:"webhook_url,omitempty"`
}

// NewCreateScheduledLambdaRequest instantiates a new CreateScheduledLambdaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateScheduledLambdaRequest(cronString string, qlName string) *CreateScheduledLambdaRequest {
	this := CreateScheduledLambdaRequest{}
	this.CronString = cronString
	this.QlName = qlName
	return &this
}

// NewCreateScheduledLambdaRequestWithDefaults instantiates a new CreateScheduledLambdaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateScheduledLambdaRequestWithDefaults() *CreateScheduledLambdaRequest {
	this := CreateScheduledLambdaRequest{}
	return &this
}

// GetApikey returns the Apikey field value if set, zero value otherwise.
func (o *CreateScheduledLambdaRequest) GetApikey() string {
	if o == nil || IsNil(o.Apikey) {
		var ret string
		return ret
	}
	return *o.Apikey
}

// GetApikeyOk returns a tuple with the Apikey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScheduledLambdaRequest) GetApikeyOk() (*string, bool) {
	if o == nil || IsNil(o.Apikey) {
		return nil, false
	}
	return o.Apikey, true
}

// HasApikey returns a boolean if a field has been set.
func (o *CreateScheduledLambdaRequest) HasApikey() bool {
	if o != nil && !IsNil(o.Apikey) {
		return true
	}

	return false
}

// SetApikey gets a reference to the given string and assigns it to the Apikey field.
func (o *CreateScheduledLambdaRequest) SetApikey(v string) {
	o.Apikey = &v
}

// GetCronString returns the CronString field value
func (o *CreateScheduledLambdaRequest) GetCronString() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CronString
}

// GetCronStringOk returns a tuple with the CronString field value
// and a boolean to check if the value has been set.
func (o *CreateScheduledLambdaRequest) GetCronStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CronString, true
}

// SetCronString sets field value
func (o *CreateScheduledLambdaRequest) SetCronString(v string) {
	o.CronString = v
}

// GetQlName returns the QlName field value
func (o *CreateScheduledLambdaRequest) GetQlName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QlName
}

// GetQlNameOk returns a tuple with the QlName field value
// and a boolean to check if the value has been set.
func (o *CreateScheduledLambdaRequest) GetQlNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QlName, true
}

// SetQlName sets field value
func (o *CreateScheduledLambdaRequest) SetQlName(v string) {
	o.QlName = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *CreateScheduledLambdaRequest) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScheduledLambdaRequest) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *CreateScheduledLambdaRequest) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *CreateScheduledLambdaRequest) SetTag(v string) {
	o.Tag = &v
}

// GetTotalTimesToExecute returns the TotalTimesToExecute field value if set, zero value otherwise.
func (o *CreateScheduledLambdaRequest) GetTotalTimesToExecute() int64 {
	if o == nil || IsNil(o.TotalTimesToExecute) {
		var ret int64
		return ret
	}
	return *o.TotalTimesToExecute
}

// GetTotalTimesToExecuteOk returns a tuple with the TotalTimesToExecute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScheduledLambdaRequest) GetTotalTimesToExecuteOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalTimesToExecute) {
		return nil, false
	}
	return o.TotalTimesToExecute, true
}

// HasTotalTimesToExecute returns a boolean if a field has been set.
func (o *CreateScheduledLambdaRequest) HasTotalTimesToExecute() bool {
	if o != nil && !IsNil(o.TotalTimesToExecute) {
		return true
	}

	return false
}

// SetTotalTimesToExecute gets a reference to the given int64 and assigns it to the TotalTimesToExecute field.
func (o *CreateScheduledLambdaRequest) SetTotalTimesToExecute(v int64) {
	o.TotalTimesToExecute = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CreateScheduledLambdaRequest) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScheduledLambdaRequest) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CreateScheduledLambdaRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CreateScheduledLambdaRequest) SetVersion(v string) {
	o.Version = &v
}

// GetWebhookAuthHeader returns the WebhookAuthHeader field value if set, zero value otherwise.
func (o *CreateScheduledLambdaRequest) GetWebhookAuthHeader() string {
	if o == nil || IsNil(o.WebhookAuthHeader) {
		var ret string
		return ret
	}
	return *o.WebhookAuthHeader
}

// GetWebhookAuthHeaderOk returns a tuple with the WebhookAuthHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScheduledLambdaRequest) GetWebhookAuthHeaderOk() (*string, bool) {
	if o == nil || IsNil(o.WebhookAuthHeader) {
		return nil, false
	}
	return o.WebhookAuthHeader, true
}

// HasWebhookAuthHeader returns a boolean if a field has been set.
func (o *CreateScheduledLambdaRequest) HasWebhookAuthHeader() bool {
	if o != nil && !IsNil(o.WebhookAuthHeader) {
		return true
	}

	return false
}

// SetWebhookAuthHeader gets a reference to the given string and assigns it to the WebhookAuthHeader field.
func (o *CreateScheduledLambdaRequest) SetWebhookAuthHeader(v string) {
	o.WebhookAuthHeader = &v
}

// GetWebhookPayload returns the WebhookPayload field value if set, zero value otherwise.
func (o *CreateScheduledLambdaRequest) GetWebhookPayload() string {
	if o == nil || IsNil(o.WebhookPayload) {
		var ret string
		return ret
	}
	return *o.WebhookPayload
}

// GetWebhookPayloadOk returns a tuple with the WebhookPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScheduledLambdaRequest) GetWebhookPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.WebhookPayload) {
		return nil, false
	}
	return o.WebhookPayload, true
}

// HasWebhookPayload returns a boolean if a field has been set.
func (o *CreateScheduledLambdaRequest) HasWebhookPayload() bool {
	if o != nil && !IsNil(o.WebhookPayload) {
		return true
	}

	return false
}

// SetWebhookPayload gets a reference to the given string and assigns it to the WebhookPayload field.
func (o *CreateScheduledLambdaRequest) SetWebhookPayload(v string) {
	o.WebhookPayload = &v
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise.
func (o *CreateScheduledLambdaRequest) GetWebhookUrl() string {
	if o == nil || IsNil(o.WebhookUrl) {
		var ret string
		return ret
	}
	return *o.WebhookUrl
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScheduledLambdaRequest) GetWebhookUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WebhookUrl) {
		return nil, false
	}
	return o.WebhookUrl, true
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *CreateScheduledLambdaRequest) HasWebhookUrl() bool {
	if o != nil && !IsNil(o.WebhookUrl) {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given string and assigns it to the WebhookUrl field.
func (o *CreateScheduledLambdaRequest) SetWebhookUrl(v string) {
	o.WebhookUrl = &v
}

func (o CreateScheduledLambdaRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateScheduledLambdaRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Apikey) {
		toSerialize["apikey"] = o.Apikey
	}
	toSerialize["cron_string"] = o.CronString
	toSerialize["ql_name"] = o.QlName
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.TotalTimesToExecute) {
		toSerialize["total_times_to_execute"] = o.TotalTimesToExecute
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.WebhookAuthHeader) {
		toSerialize["webhook_auth_header"] = o.WebhookAuthHeader
	}
	if !IsNil(o.WebhookPayload) {
		toSerialize["webhook_payload"] = o.WebhookPayload
	}
	if !IsNil(o.WebhookUrl) {
		toSerialize["webhook_url"] = o.WebhookUrl
	}
	return toSerialize, nil
}

type NullableCreateScheduledLambdaRequest struct {
	value *CreateScheduledLambdaRequest
	isSet bool
}

func (v NullableCreateScheduledLambdaRequest) Get() *CreateScheduledLambdaRequest {
	return v.value
}

func (v *NullableCreateScheduledLambdaRequest) Set(val *CreateScheduledLambdaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateScheduledLambdaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateScheduledLambdaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateScheduledLambdaRequest(val *CreateScheduledLambdaRequest) *NullableCreateScheduledLambdaRequest {
	return &NullableCreateScheduledLambdaRequest{value: val, isSet: true}
}

func (v NullableCreateScheduledLambdaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateScheduledLambdaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
