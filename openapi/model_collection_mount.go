/*
REST API

Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CollectionMount struct for CollectionMount
type CollectionMount struct {
	// Mount type.
	Type *string `json:"type,omitempty"`
	// ISO-8601 date.
	CreatedAt *string `json:"created_at,omitempty"`
	// Mount type.
	State *string `json:"state,omitempty"`
	// Collection path.
	CollectionPath *string `json:"collection_path,omitempty"`
	// Virtual instance ID.
	VirtualInstanceId *string `json:"virtual_instance_id,omitempty"`
	// Virtual Instance RRN.
	VirtualInstanceRrn *string `json:"virtual_instance_rrn,omitempty"`
	// Mount ID.
	Id *string `json:"id,omitempty"`
	// Mount RRN.
	Rrn *string `json:"rrn,omitempty"`
	// Time in millis at which the snapshot expires.
	SnapshotExpirationTimeMillis *int64 `json:"snapshot_expiration_time_millis,omitempty"`
}

// NewCollectionMount instantiates a new CollectionMount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionMount() *CollectionMount {
	this := CollectionMount{}
	return &this
}

// NewCollectionMountWithDefaults instantiates a new CollectionMount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionMountWithDefaults() *CollectionMount {
	this := CollectionMount{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CollectionMount) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMount) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CollectionMount) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CollectionMount) SetType(v string) {
	o.Type = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CollectionMount) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMount) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CollectionMount) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CollectionMount) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CollectionMount) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMount) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CollectionMount) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CollectionMount) SetState(v string) {
	o.State = &v
}

// GetCollectionPath returns the CollectionPath field value if set, zero value otherwise.
func (o *CollectionMount) GetCollectionPath() string {
	if o == nil || o.CollectionPath == nil {
		var ret string
		return ret
	}
	return *o.CollectionPath
}

// GetCollectionPathOk returns a tuple with the CollectionPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMount) GetCollectionPathOk() (*string, bool) {
	if o == nil || o.CollectionPath == nil {
		return nil, false
	}
	return o.CollectionPath, true
}

// HasCollectionPath returns a boolean if a field has been set.
func (o *CollectionMount) HasCollectionPath() bool {
	if o != nil && o.CollectionPath != nil {
		return true
	}

	return false
}

// SetCollectionPath gets a reference to the given string and assigns it to the CollectionPath field.
func (o *CollectionMount) SetCollectionPath(v string) {
	o.CollectionPath = &v
}

// GetVirtualInstanceId returns the VirtualInstanceId field value if set, zero value otherwise.
func (o *CollectionMount) GetVirtualInstanceId() string {
	if o == nil || o.VirtualInstanceId == nil {
		var ret string
		return ret
	}
	return *o.VirtualInstanceId
}

// GetVirtualInstanceIdOk returns a tuple with the VirtualInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMount) GetVirtualInstanceIdOk() (*string, bool) {
	if o == nil || o.VirtualInstanceId == nil {
		return nil, false
	}
	return o.VirtualInstanceId, true
}

// HasVirtualInstanceId returns a boolean if a field has been set.
func (o *CollectionMount) HasVirtualInstanceId() bool {
	if o != nil && o.VirtualInstanceId != nil {
		return true
	}

	return false
}

// SetVirtualInstanceId gets a reference to the given string and assigns it to the VirtualInstanceId field.
func (o *CollectionMount) SetVirtualInstanceId(v string) {
	o.VirtualInstanceId = &v
}

// GetVirtualInstanceRrn returns the VirtualInstanceRrn field value if set, zero value otherwise.
func (o *CollectionMount) GetVirtualInstanceRrn() string {
	if o == nil || o.VirtualInstanceRrn == nil {
		var ret string
		return ret
	}
	return *o.VirtualInstanceRrn
}

// GetVirtualInstanceRrnOk returns a tuple with the VirtualInstanceRrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMount) GetVirtualInstanceRrnOk() (*string, bool) {
	if o == nil || o.VirtualInstanceRrn == nil {
		return nil, false
	}
	return o.VirtualInstanceRrn, true
}

// HasVirtualInstanceRrn returns a boolean if a field has been set.
func (o *CollectionMount) HasVirtualInstanceRrn() bool {
	if o != nil && o.VirtualInstanceRrn != nil {
		return true
	}

	return false
}

// SetVirtualInstanceRrn gets a reference to the given string and assigns it to the VirtualInstanceRrn field.
func (o *CollectionMount) SetVirtualInstanceRrn(v string) {
	o.VirtualInstanceRrn = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CollectionMount) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMount) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CollectionMount) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CollectionMount) SetId(v string) {
	o.Id = &v
}

// GetRrn returns the Rrn field value if set, zero value otherwise.
func (o *CollectionMount) GetRrn() string {
	if o == nil || o.Rrn == nil {
		var ret string
		return ret
	}
	return *o.Rrn
}

// GetRrnOk returns a tuple with the Rrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMount) GetRrnOk() (*string, bool) {
	if o == nil || o.Rrn == nil {
		return nil, false
	}
	return o.Rrn, true
}

// HasRrn returns a boolean if a field has been set.
func (o *CollectionMount) HasRrn() bool {
	if o != nil && o.Rrn != nil {
		return true
	}

	return false
}

// SetRrn gets a reference to the given string and assigns it to the Rrn field.
func (o *CollectionMount) SetRrn(v string) {
	o.Rrn = &v
}

// GetSnapshotExpirationTimeMillis returns the SnapshotExpirationTimeMillis field value if set, zero value otherwise.
func (o *CollectionMount) GetSnapshotExpirationTimeMillis() int64 {
	if o == nil || o.SnapshotExpirationTimeMillis == nil {
		var ret int64
		return ret
	}
	return *o.SnapshotExpirationTimeMillis
}

// GetSnapshotExpirationTimeMillisOk returns a tuple with the SnapshotExpirationTimeMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMount) GetSnapshotExpirationTimeMillisOk() (*int64, bool) {
	if o == nil || o.SnapshotExpirationTimeMillis == nil {
		return nil, false
	}
	return o.SnapshotExpirationTimeMillis, true
}

// HasSnapshotExpirationTimeMillis returns a boolean if a field has been set.
func (o *CollectionMount) HasSnapshotExpirationTimeMillis() bool {
	if o != nil && o.SnapshotExpirationTimeMillis != nil {
		return true
	}

	return false
}

// SetSnapshotExpirationTimeMillis gets a reference to the given int64 and assigns it to the SnapshotExpirationTimeMillis field.
func (o *CollectionMount) SetSnapshotExpirationTimeMillis(v int64) {
	o.SnapshotExpirationTimeMillis = &v
}

func (o CollectionMount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.CollectionPath != nil {
		toSerialize["collection_path"] = o.CollectionPath
	}
	if o.VirtualInstanceId != nil {
		toSerialize["virtual_instance_id"] = o.VirtualInstanceId
	}
	if o.VirtualInstanceRrn != nil {
		toSerialize["virtual_instance_rrn"] = o.VirtualInstanceRrn
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Rrn != nil {
		toSerialize["rrn"] = o.Rrn
	}
	if o.SnapshotExpirationTimeMillis != nil {
		toSerialize["snapshot_expiration_time_millis"] = o.SnapshotExpirationTimeMillis
	}
	return json.Marshal(toSerialize)
}

type NullableCollectionMount struct {
	value *CollectionMount
	isSet bool
}

func (v NullableCollectionMount) Get() *CollectionMount {
	return v.value
}

func (v *NullableCollectionMount) Set(val *CollectionMount) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionMount) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionMount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionMount(val *CollectionMount) *NullableCollectionMount {
	return &NullableCollectionMount{value: val, isSet: true}
}

func (v NullableCollectionMount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionMount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


