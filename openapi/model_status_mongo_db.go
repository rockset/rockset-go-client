/*
REST API

Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StatusMongoDb type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusMongoDb{}

// StatusMongoDb struct for StatusMongoDb
type StatusMongoDb struct {
	// MongoDB scan end time.
	ScanEndTime *string `json:"scan_end_time,omitempty"`
	// Number of records inserted using scan.
	ScanRecordsProcessed *int64 `json:"scan_records_processed,omitempty"`
	// MongoDB scan start time.
	ScanStartTime *string `json:"scan_start_time,omitempty"`
	// Number of records in MongoDB table at time of scan.
	ScanTotalRecords *int64 `json:"scan_total_records,omitempty"`
	// State of current ingest for this table.
	State *string `json:"state,omitempty"`
	// ISO-8601 date when delete from source was last processed.
	StreamLastDeleteProcessedAt *string `json:"stream_last_delete_processed_at,omitempty"`
	// ISO-8601 date when new insert from source was last processed.
	StreamLastInsertProcessedAt *string `json:"stream_last_insert_processed_at,omitempty"`
	// ISO-8601 date when update from source was last processed.
	StreamLastUpdateProcessedAt *string `json:"stream_last_update_processed_at,omitempty"`
	// Number of new records deleted using stream.
	StreamRecordsDeleted *int64 `json:"stream_records_deleted,omitempty"`
	// Number of new records inserted using stream.
	StreamRecordsInserted *int64 `json:"stream_records_inserted,omitempty"`
	// Number of new records updated using stream.
	StreamRecordsUpdated *int64 `json:"stream_records_updated,omitempty"`
}

// NewStatusMongoDb instantiates a new StatusMongoDb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusMongoDb() *StatusMongoDb {
	this := StatusMongoDb{}
	return &this
}

// NewStatusMongoDbWithDefaults instantiates a new StatusMongoDb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusMongoDbWithDefaults() *StatusMongoDb {
	this := StatusMongoDb{}
	return &this
}

// GetScanEndTime returns the ScanEndTime field value if set, zero value otherwise.
func (o *StatusMongoDb) GetScanEndTime() string {
	if o == nil || IsNil(o.ScanEndTime) {
		var ret string
		return ret
	}
	return *o.ScanEndTime
}

// GetScanEndTimeOk returns a tuple with the ScanEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMongoDb) GetScanEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ScanEndTime) {
		return nil, false
	}
	return o.ScanEndTime, true
}

// HasScanEndTime returns a boolean if a field has been set.
func (o *StatusMongoDb) HasScanEndTime() bool {
	if o != nil && !IsNil(o.ScanEndTime) {
		return true
	}

	return false
}

// SetScanEndTime gets a reference to the given string and assigns it to the ScanEndTime field.
func (o *StatusMongoDb) SetScanEndTime(v string) {
	o.ScanEndTime = &v
}

// GetScanRecordsProcessed returns the ScanRecordsProcessed field value if set, zero value otherwise.
func (o *StatusMongoDb) GetScanRecordsProcessed() int64 {
	if o == nil || IsNil(o.ScanRecordsProcessed) {
		var ret int64
		return ret
	}
	return *o.ScanRecordsProcessed
}

// GetScanRecordsProcessedOk returns a tuple with the ScanRecordsProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMongoDb) GetScanRecordsProcessedOk() (*int64, bool) {
	if o == nil || IsNil(o.ScanRecordsProcessed) {
		return nil, false
	}
	return o.ScanRecordsProcessed, true
}

// HasScanRecordsProcessed returns a boolean if a field has been set.
func (o *StatusMongoDb) HasScanRecordsProcessed() bool {
	if o != nil && !IsNil(o.ScanRecordsProcessed) {
		return true
	}

	return false
}

// SetScanRecordsProcessed gets a reference to the given int64 and assigns it to the ScanRecordsProcessed field.
func (o *StatusMongoDb) SetScanRecordsProcessed(v int64) {
	o.ScanRecordsProcessed = &v
}

// GetScanStartTime returns the ScanStartTime field value if set, zero value otherwise.
func (o *StatusMongoDb) GetScanStartTime() string {
	if o == nil || IsNil(o.ScanStartTime) {
		var ret string
		return ret
	}
	return *o.ScanStartTime
}

// GetScanStartTimeOk returns a tuple with the ScanStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMongoDb) GetScanStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ScanStartTime) {
		return nil, false
	}
	return o.ScanStartTime, true
}

// HasScanStartTime returns a boolean if a field has been set.
func (o *StatusMongoDb) HasScanStartTime() bool {
	if o != nil && !IsNil(o.ScanStartTime) {
		return true
	}

	return false
}

// SetScanStartTime gets a reference to the given string and assigns it to the ScanStartTime field.
func (o *StatusMongoDb) SetScanStartTime(v string) {
	o.ScanStartTime = &v
}

// GetScanTotalRecords returns the ScanTotalRecords field value if set, zero value otherwise.
func (o *StatusMongoDb) GetScanTotalRecords() int64 {
	if o == nil || IsNil(o.ScanTotalRecords) {
		var ret int64
		return ret
	}
	return *o.ScanTotalRecords
}

// GetScanTotalRecordsOk returns a tuple with the ScanTotalRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMongoDb) GetScanTotalRecordsOk() (*int64, bool) {
	if o == nil || IsNil(o.ScanTotalRecords) {
		return nil, false
	}
	return o.ScanTotalRecords, true
}

// HasScanTotalRecords returns a boolean if a field has been set.
func (o *StatusMongoDb) HasScanTotalRecords() bool {
	if o != nil && !IsNil(o.ScanTotalRecords) {
		return true
	}

	return false
}

// SetScanTotalRecords gets a reference to the given int64 and assigns it to the ScanTotalRecords field.
func (o *StatusMongoDb) SetScanTotalRecords(v int64) {
	o.ScanTotalRecords = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *StatusMongoDb) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMongoDb) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *StatusMongoDb) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *StatusMongoDb) SetState(v string) {
	o.State = &v
}

// GetStreamLastDeleteProcessedAt returns the StreamLastDeleteProcessedAt field value if set, zero value otherwise.
func (o *StatusMongoDb) GetStreamLastDeleteProcessedAt() string {
	if o == nil || IsNil(o.StreamLastDeleteProcessedAt) {
		var ret string
		return ret
	}
	return *o.StreamLastDeleteProcessedAt
}

// GetStreamLastDeleteProcessedAtOk returns a tuple with the StreamLastDeleteProcessedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMongoDb) GetStreamLastDeleteProcessedAtOk() (*string, bool) {
	if o == nil || IsNil(o.StreamLastDeleteProcessedAt) {
		return nil, false
	}
	return o.StreamLastDeleteProcessedAt, true
}

// HasStreamLastDeleteProcessedAt returns a boolean if a field has been set.
func (o *StatusMongoDb) HasStreamLastDeleteProcessedAt() bool {
	if o != nil && !IsNil(o.StreamLastDeleteProcessedAt) {
		return true
	}

	return false
}

// SetStreamLastDeleteProcessedAt gets a reference to the given string and assigns it to the StreamLastDeleteProcessedAt field.
func (o *StatusMongoDb) SetStreamLastDeleteProcessedAt(v string) {
	o.StreamLastDeleteProcessedAt = &v
}

// GetStreamLastInsertProcessedAt returns the StreamLastInsertProcessedAt field value if set, zero value otherwise.
func (o *StatusMongoDb) GetStreamLastInsertProcessedAt() string {
	if o == nil || IsNil(o.StreamLastInsertProcessedAt) {
		var ret string
		return ret
	}
	return *o.StreamLastInsertProcessedAt
}

// GetStreamLastInsertProcessedAtOk returns a tuple with the StreamLastInsertProcessedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMongoDb) GetStreamLastInsertProcessedAtOk() (*string, bool) {
	if o == nil || IsNil(o.StreamLastInsertProcessedAt) {
		return nil, false
	}
	return o.StreamLastInsertProcessedAt, true
}

// HasStreamLastInsertProcessedAt returns a boolean if a field has been set.
func (o *StatusMongoDb) HasStreamLastInsertProcessedAt() bool {
	if o != nil && !IsNil(o.StreamLastInsertProcessedAt) {
		return true
	}

	return false
}

// SetStreamLastInsertProcessedAt gets a reference to the given string and assigns it to the StreamLastInsertProcessedAt field.
func (o *StatusMongoDb) SetStreamLastInsertProcessedAt(v string) {
	o.StreamLastInsertProcessedAt = &v
}

// GetStreamLastUpdateProcessedAt returns the StreamLastUpdateProcessedAt field value if set, zero value otherwise.
func (o *StatusMongoDb) GetStreamLastUpdateProcessedAt() string {
	if o == nil || IsNil(o.StreamLastUpdateProcessedAt) {
		var ret string
		return ret
	}
	return *o.StreamLastUpdateProcessedAt
}

// GetStreamLastUpdateProcessedAtOk returns a tuple with the StreamLastUpdateProcessedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMongoDb) GetStreamLastUpdateProcessedAtOk() (*string, bool) {
	if o == nil || IsNil(o.StreamLastUpdateProcessedAt) {
		return nil, false
	}
	return o.StreamLastUpdateProcessedAt, true
}

// HasStreamLastUpdateProcessedAt returns a boolean if a field has been set.
func (o *StatusMongoDb) HasStreamLastUpdateProcessedAt() bool {
	if o != nil && !IsNil(o.StreamLastUpdateProcessedAt) {
		return true
	}

	return false
}

// SetStreamLastUpdateProcessedAt gets a reference to the given string and assigns it to the StreamLastUpdateProcessedAt field.
func (o *StatusMongoDb) SetStreamLastUpdateProcessedAt(v string) {
	o.StreamLastUpdateProcessedAt = &v
}

// GetStreamRecordsDeleted returns the StreamRecordsDeleted field value if set, zero value otherwise.
func (o *StatusMongoDb) GetStreamRecordsDeleted() int64 {
	if o == nil || IsNil(o.StreamRecordsDeleted) {
		var ret int64
		return ret
	}
	return *o.StreamRecordsDeleted
}

// GetStreamRecordsDeletedOk returns a tuple with the StreamRecordsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMongoDb) GetStreamRecordsDeletedOk() (*int64, bool) {
	if o == nil || IsNil(o.StreamRecordsDeleted) {
		return nil, false
	}
	return o.StreamRecordsDeleted, true
}

// HasStreamRecordsDeleted returns a boolean if a field has been set.
func (o *StatusMongoDb) HasStreamRecordsDeleted() bool {
	if o != nil && !IsNil(o.StreamRecordsDeleted) {
		return true
	}

	return false
}

// SetStreamRecordsDeleted gets a reference to the given int64 and assigns it to the StreamRecordsDeleted field.
func (o *StatusMongoDb) SetStreamRecordsDeleted(v int64) {
	o.StreamRecordsDeleted = &v
}

// GetStreamRecordsInserted returns the StreamRecordsInserted field value if set, zero value otherwise.
func (o *StatusMongoDb) GetStreamRecordsInserted() int64 {
	if o == nil || IsNil(o.StreamRecordsInserted) {
		var ret int64
		return ret
	}
	return *o.StreamRecordsInserted
}

// GetStreamRecordsInsertedOk returns a tuple with the StreamRecordsInserted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMongoDb) GetStreamRecordsInsertedOk() (*int64, bool) {
	if o == nil || IsNil(o.StreamRecordsInserted) {
		return nil, false
	}
	return o.StreamRecordsInserted, true
}

// HasStreamRecordsInserted returns a boolean if a field has been set.
func (o *StatusMongoDb) HasStreamRecordsInserted() bool {
	if o != nil && !IsNil(o.StreamRecordsInserted) {
		return true
	}

	return false
}

// SetStreamRecordsInserted gets a reference to the given int64 and assigns it to the StreamRecordsInserted field.
func (o *StatusMongoDb) SetStreamRecordsInserted(v int64) {
	o.StreamRecordsInserted = &v
}

// GetStreamRecordsUpdated returns the StreamRecordsUpdated field value if set, zero value otherwise.
func (o *StatusMongoDb) GetStreamRecordsUpdated() int64 {
	if o == nil || IsNil(o.StreamRecordsUpdated) {
		var ret int64
		return ret
	}
	return *o.StreamRecordsUpdated
}

// GetStreamRecordsUpdatedOk returns a tuple with the StreamRecordsUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusMongoDb) GetStreamRecordsUpdatedOk() (*int64, bool) {
	if o == nil || IsNil(o.StreamRecordsUpdated) {
		return nil, false
	}
	return o.StreamRecordsUpdated, true
}

// HasStreamRecordsUpdated returns a boolean if a field has been set.
func (o *StatusMongoDb) HasStreamRecordsUpdated() bool {
	if o != nil && !IsNil(o.StreamRecordsUpdated) {
		return true
	}

	return false
}

// SetStreamRecordsUpdated gets a reference to the given int64 and assigns it to the StreamRecordsUpdated field.
func (o *StatusMongoDb) SetStreamRecordsUpdated(v int64) {
	o.StreamRecordsUpdated = &v
}

func (o StatusMongoDb) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusMongoDb) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScanEndTime) {
		toSerialize["scan_end_time"] = o.ScanEndTime
	}
	if !IsNil(o.ScanRecordsProcessed) {
		toSerialize["scan_records_processed"] = o.ScanRecordsProcessed
	}
	if !IsNil(o.ScanStartTime) {
		toSerialize["scan_start_time"] = o.ScanStartTime
	}
	if !IsNil(o.ScanTotalRecords) {
		toSerialize["scan_total_records"] = o.ScanTotalRecords
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.StreamLastDeleteProcessedAt) {
		toSerialize["stream_last_delete_processed_at"] = o.StreamLastDeleteProcessedAt
	}
	if !IsNil(o.StreamLastInsertProcessedAt) {
		toSerialize["stream_last_insert_processed_at"] = o.StreamLastInsertProcessedAt
	}
	if !IsNil(o.StreamLastUpdateProcessedAt) {
		toSerialize["stream_last_update_processed_at"] = o.StreamLastUpdateProcessedAt
	}
	if !IsNil(o.StreamRecordsDeleted) {
		toSerialize["stream_records_deleted"] = o.StreamRecordsDeleted
	}
	if !IsNil(o.StreamRecordsInserted) {
		toSerialize["stream_records_inserted"] = o.StreamRecordsInserted
	}
	if !IsNil(o.StreamRecordsUpdated) {
		toSerialize["stream_records_updated"] = o.StreamRecordsUpdated
	}
	return toSerialize, nil
}

type NullableStatusMongoDb struct {
	value *StatusMongoDb
	isSet bool
}

func (v NullableStatusMongoDb) Get() *StatusMongoDb {
	return v.value
}

func (v *NullableStatusMongoDb) Set(val *StatusMongoDb) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusMongoDb) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusMongoDb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusMongoDb(val *StatusMongoDb) *NullableStatusMongoDb {
	return &NullableStatusMongoDb{value: val, isSet: true}
}

func (v NullableStatusMongoDb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusMongoDb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


