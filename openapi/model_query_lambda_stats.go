/*
REST API

Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QueryLambdaStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryLambdaStats{}

// QueryLambdaStats struct for QueryLambdaStats
type QueryLambdaStats struct {
	// ISO-8601 date.
	LastExecuted *string `json:"last_executed,omitempty"`
	// User who last executed Query Lambda.
	LastExecutedBy *string `json:"last_executed_by,omitempty"`
	// ISO-8601 date of last execution failure.
	LastExecutionError *string `json:"last_execution_error,omitempty"`
	// Error message associated with last failed execution.
	LastExecutionErrorMessage *string `json:"last_execution_error_message,omitempty"`
}

// NewQueryLambdaStats instantiates a new QueryLambdaStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryLambdaStats() *QueryLambdaStats {
	this := QueryLambdaStats{}
	return &this
}

// NewQueryLambdaStatsWithDefaults instantiates a new QueryLambdaStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryLambdaStatsWithDefaults() *QueryLambdaStats {
	this := QueryLambdaStats{}
	return &this
}

// GetLastExecuted returns the LastExecuted field value if set, zero value otherwise.
func (o *QueryLambdaStats) GetLastExecuted() string {
	if o == nil || IsNil(o.LastExecuted) {
		var ret string
		return ret
	}
	return *o.LastExecuted
}

// GetLastExecutedOk returns a tuple with the LastExecuted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryLambdaStats) GetLastExecutedOk() (*string, bool) {
	if o == nil || IsNil(o.LastExecuted) {
		return nil, false
	}
	return o.LastExecuted, true
}

// HasLastExecuted returns a boolean if a field has been set.
func (o *QueryLambdaStats) HasLastExecuted() bool {
	if o != nil && !IsNil(o.LastExecuted) {
		return true
	}

	return false
}

// SetLastExecuted gets a reference to the given string and assigns it to the LastExecuted field.
func (o *QueryLambdaStats) SetLastExecuted(v string) {
	o.LastExecuted = &v
}

// GetLastExecutedBy returns the LastExecutedBy field value if set, zero value otherwise.
func (o *QueryLambdaStats) GetLastExecutedBy() string {
	if o == nil || IsNil(o.LastExecutedBy) {
		var ret string
		return ret
	}
	return *o.LastExecutedBy
}

// GetLastExecutedByOk returns a tuple with the LastExecutedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryLambdaStats) GetLastExecutedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastExecutedBy) {
		return nil, false
	}
	return o.LastExecutedBy, true
}

// HasLastExecutedBy returns a boolean if a field has been set.
func (o *QueryLambdaStats) HasLastExecutedBy() bool {
	if o != nil && !IsNil(o.LastExecutedBy) {
		return true
	}

	return false
}

// SetLastExecutedBy gets a reference to the given string and assigns it to the LastExecutedBy field.
func (o *QueryLambdaStats) SetLastExecutedBy(v string) {
	o.LastExecutedBy = &v
}

// GetLastExecutionError returns the LastExecutionError field value if set, zero value otherwise.
func (o *QueryLambdaStats) GetLastExecutionError() string {
	if o == nil || IsNil(o.LastExecutionError) {
		var ret string
		return ret
	}
	return *o.LastExecutionError
}

// GetLastExecutionErrorOk returns a tuple with the LastExecutionError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryLambdaStats) GetLastExecutionErrorOk() (*string, bool) {
	if o == nil || IsNil(o.LastExecutionError) {
		return nil, false
	}
	return o.LastExecutionError, true
}

// HasLastExecutionError returns a boolean if a field has been set.
func (o *QueryLambdaStats) HasLastExecutionError() bool {
	if o != nil && !IsNil(o.LastExecutionError) {
		return true
	}

	return false
}

// SetLastExecutionError gets a reference to the given string and assigns it to the LastExecutionError field.
func (o *QueryLambdaStats) SetLastExecutionError(v string) {
	o.LastExecutionError = &v
}

// GetLastExecutionErrorMessage returns the LastExecutionErrorMessage field value if set, zero value otherwise.
func (o *QueryLambdaStats) GetLastExecutionErrorMessage() string {
	if o == nil || IsNil(o.LastExecutionErrorMessage) {
		var ret string
		return ret
	}
	return *o.LastExecutionErrorMessage
}

// GetLastExecutionErrorMessageOk returns a tuple with the LastExecutionErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryLambdaStats) GetLastExecutionErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.LastExecutionErrorMessage) {
		return nil, false
	}
	return o.LastExecutionErrorMessage, true
}

// HasLastExecutionErrorMessage returns a boolean if a field has been set.
func (o *QueryLambdaStats) HasLastExecutionErrorMessage() bool {
	if o != nil && !IsNil(o.LastExecutionErrorMessage) {
		return true
	}

	return false
}

// SetLastExecutionErrorMessage gets a reference to the given string and assigns it to the LastExecutionErrorMessage field.
func (o *QueryLambdaStats) SetLastExecutionErrorMessage(v string) {
	o.LastExecutionErrorMessage = &v
}

func (o QueryLambdaStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryLambdaStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastExecuted) {
		toSerialize["last_executed"] = o.LastExecuted
	}
	if !IsNil(o.LastExecutedBy) {
		toSerialize["last_executed_by"] = o.LastExecutedBy
	}
	if !IsNil(o.LastExecutionError) {
		toSerialize["last_execution_error"] = o.LastExecutionError
	}
	if !IsNil(o.LastExecutionErrorMessage) {
		toSerialize["last_execution_error_message"] = o.LastExecutionErrorMessage
	}
	return toSerialize, nil
}

type NullableQueryLambdaStats struct {
	value *QueryLambdaStats
	isSet bool
}

func (v NullableQueryLambdaStats) Get() *QueryLambdaStats {
	return v.value
}

func (v *NullableQueryLambdaStats) Set(val *QueryLambdaStats) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryLambdaStats) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryLambdaStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryLambdaStats(val *QueryLambdaStats) *NullableQueryLambdaStats {
	return &NullableQueryLambdaStats{value: val, isSet: true}
}

func (v NullableQueryLambdaStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryLambdaStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


