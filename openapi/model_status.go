/*
REST API

Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Status type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Status{}

// Status struct for Status
type Status struct {
	// Size in bytes detected for the source at collection initialization. This size can be 0 or null for event stream sources.
	DetectedSizeBytes *int64 `json:"detected_size_bytes,omitempty"`
	// ISO-8601 date when source was last processed.
	LastProcessedAt *string `json:"last_processed_at,omitempty"`
	// Last source item processed by ingester.
	LastProcessedItem *string `json:"last_processed_item,omitempty"`
	// State message.
	Message *string `json:"message,omitempty"`
	// Status of the Source's ingestion.
	State *string `json:"state,omitempty"`
	// Total items processed of source.
	TotalProcessedItems *int64 `json:"total_processed_items,omitempty"`
}

// NewStatus instantiates a new Status object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatus() *Status {
	this := Status{}
	return &this
}

// NewStatusWithDefaults instantiates a new Status object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusWithDefaults() *Status {
	this := Status{}
	return &this
}

// GetDetectedSizeBytes returns the DetectedSizeBytes field value if set, zero value otherwise.
func (o *Status) GetDetectedSizeBytes() int64 {
	if o == nil || IsNil(o.DetectedSizeBytes) {
		var ret int64
		return ret
	}
	return *o.DetectedSizeBytes
}

// GetDetectedSizeBytesOk returns a tuple with the DetectedSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Status) GetDetectedSizeBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.DetectedSizeBytes) {
		return nil, false
	}
	return o.DetectedSizeBytes, true
}

// HasDetectedSizeBytes returns a boolean if a field has been set.
func (o *Status) HasDetectedSizeBytes() bool {
	if o != nil && !IsNil(o.DetectedSizeBytes) {
		return true
	}

	return false
}

// SetDetectedSizeBytes gets a reference to the given int64 and assigns it to the DetectedSizeBytes field.
func (o *Status) SetDetectedSizeBytes(v int64) {
	o.DetectedSizeBytes = &v
}

// GetLastProcessedAt returns the LastProcessedAt field value if set, zero value otherwise.
func (o *Status) GetLastProcessedAt() string {
	if o == nil || IsNil(o.LastProcessedAt) {
		var ret string
		return ret
	}
	return *o.LastProcessedAt
}

// GetLastProcessedAtOk returns a tuple with the LastProcessedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Status) GetLastProcessedAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastProcessedAt) {
		return nil, false
	}
	return o.LastProcessedAt, true
}

// HasLastProcessedAt returns a boolean if a field has been set.
func (o *Status) HasLastProcessedAt() bool {
	if o != nil && !IsNil(o.LastProcessedAt) {
		return true
	}

	return false
}

// SetLastProcessedAt gets a reference to the given string and assigns it to the LastProcessedAt field.
func (o *Status) SetLastProcessedAt(v string) {
	o.LastProcessedAt = &v
}

// GetLastProcessedItem returns the LastProcessedItem field value if set, zero value otherwise.
func (o *Status) GetLastProcessedItem() string {
	if o == nil || IsNil(o.LastProcessedItem) {
		var ret string
		return ret
	}
	return *o.LastProcessedItem
}

// GetLastProcessedItemOk returns a tuple with the LastProcessedItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Status) GetLastProcessedItemOk() (*string, bool) {
	if o == nil || IsNil(o.LastProcessedItem) {
		return nil, false
	}
	return o.LastProcessedItem, true
}

// HasLastProcessedItem returns a boolean if a field has been set.
func (o *Status) HasLastProcessedItem() bool {
	if o != nil && !IsNil(o.LastProcessedItem) {
		return true
	}

	return false
}

// SetLastProcessedItem gets a reference to the given string and assigns it to the LastProcessedItem field.
func (o *Status) SetLastProcessedItem(v string) {
	o.LastProcessedItem = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *Status) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Status) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *Status) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *Status) SetMessage(v string) {
	o.Message = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Status) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Status) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Status) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Status) SetState(v string) {
	o.State = &v
}

// GetTotalProcessedItems returns the TotalProcessedItems field value if set, zero value otherwise.
func (o *Status) GetTotalProcessedItems() int64 {
	if o == nil || IsNil(o.TotalProcessedItems) {
		var ret int64
		return ret
	}
	return *o.TotalProcessedItems
}

// GetTotalProcessedItemsOk returns a tuple with the TotalProcessedItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Status) GetTotalProcessedItemsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalProcessedItems) {
		return nil, false
	}
	return o.TotalProcessedItems, true
}

// HasTotalProcessedItems returns a boolean if a field has been set.
func (o *Status) HasTotalProcessedItems() bool {
	if o != nil && !IsNil(o.TotalProcessedItems) {
		return true
	}

	return false
}

// SetTotalProcessedItems gets a reference to the given int64 and assigns it to the TotalProcessedItems field.
func (o *Status) SetTotalProcessedItems(v int64) {
	o.TotalProcessedItems = &v
}

func (o Status) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Status) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DetectedSizeBytes) {
		toSerialize["detected_size_bytes"] = o.DetectedSizeBytes
	}
	if !IsNil(o.LastProcessedAt) {
		toSerialize["last_processed_at"] = o.LastProcessedAt
	}
	if !IsNil(o.LastProcessedItem) {
		toSerialize["last_processed_item"] = o.LastProcessedItem
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.TotalProcessedItems) {
		toSerialize["total_processed_items"] = o.TotalProcessedItems
	}
	return toSerialize, nil
}

type NullableStatus struct {
	value *Status
	isSet bool
}

func (v NullableStatus) Get() *Status {
	return v.value
}

func (v *NullableStatus) Set(val *Status) {
	v.value = val
	v.isSet = true
}

func (v NullableStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatus(val *Status) *NullableStatus {
	return &NullableStatus{value: val, isSet: true}
}

func (v NullableStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


